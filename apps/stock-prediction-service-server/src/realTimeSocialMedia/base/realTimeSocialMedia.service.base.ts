/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  RealTimeSocialMedia as PrismaRealTimeSocialMedia,
} from "@prisma/client";

export class RealTimeSocialMediaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RealTimeSocialMediaCountArgs, "select">
  ): Promise<number> {
    return this.prisma.realTimeSocialMedia.count(args);
  }

  async realTimeSocialMedias(
    args: Prisma.RealTimeSocialMediaFindManyArgs
  ): Promise<PrismaRealTimeSocialMedia[]> {
    return this.prisma.realTimeSocialMedia.findMany(args);
  }
  async realTimeSocialMedia(
    args: Prisma.RealTimeSocialMediaFindUniqueArgs
  ): Promise<PrismaRealTimeSocialMedia | null> {
    return this.prisma.realTimeSocialMedia.findUnique(args);
  }
  async createRealTimeSocialMedia(
    args: Prisma.RealTimeSocialMediaCreateArgs
  ): Promise<PrismaRealTimeSocialMedia> {
    return this.prisma.realTimeSocialMedia.create(args);
  }
  async updateRealTimeSocialMedia(
    args: Prisma.RealTimeSocialMediaUpdateArgs
  ): Promise<PrismaRealTimeSocialMedia> {
    return this.prisma.realTimeSocialMedia.update(args);
  }
  async deleteRealTimeSocialMedia(
    args: Prisma.RealTimeSocialMediaDeleteArgs
  ): Promise<PrismaRealTimeSocialMedia> {
    return this.prisma.realTimeSocialMedia.delete(args);
  }
}
