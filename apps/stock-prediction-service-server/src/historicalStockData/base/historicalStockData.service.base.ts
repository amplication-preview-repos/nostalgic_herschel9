/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  HistoricalStockData as PrismaHistoricalStockData,
} from "@prisma/client";

export class HistoricalStockDataServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HistoricalStockDataCountArgs, "select">
  ): Promise<number> {
    return this.prisma.historicalStockData.count(args);
  }

  async historicalStockDataItems(
    args: Prisma.HistoricalStockDataFindManyArgs
  ): Promise<PrismaHistoricalStockData[]> {
    return this.prisma.historicalStockData.findMany(args);
  }
  async historicalStockData(
    args: Prisma.HistoricalStockDataFindUniqueArgs
  ): Promise<PrismaHistoricalStockData | null> {
    return this.prisma.historicalStockData.findUnique(args);
  }
  async createHistoricalStockData(
    args: Prisma.HistoricalStockDataCreateArgs
  ): Promise<PrismaHistoricalStockData> {
    return this.prisma.historicalStockData.create(args);
  }
  async updateHistoricalStockData(
    args: Prisma.HistoricalStockDataUpdateArgs
  ): Promise<PrismaHistoricalStockData> {
    return this.prisma.historicalStockData.update(args);
  }
  async deleteHistoricalStockData(
    args: Prisma.HistoricalStockDataDeleteArgs
  ): Promise<PrismaHistoricalStockData> {
    return this.prisma.historicalStockData.delete(args);
  }
}
